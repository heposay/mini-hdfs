// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NameNodeRpcServer.proto

package com.hepo.dfs.namenode.rpc.service;

public final class NameNodeServer {
  private NameNodeServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\027NameNodeRpcServer.proto\022\031com.hepo.dfs." +
      "namenode.rpc\032\026NameNodeRpcModel.proto2\360\r\n" +
      "\017NameNodeService\022c\n\010register\022*.com.hepo." +
      "dfs.namenode.rpc.RegisterRequest\032+.com.h" +
      "epo.dfs.namenode.rpc.RegisterResponse\022f\n" +
      "\theartbeat\022+.com.hepo.dfs.namenode.rpc.H" +
      "eartbeatRequest\032,.com.hepo.dfs.namenode." +
      "rpc.HeartbeatResponse\022Z\n\005mkdir\022\'.com.hep" +
      "o.dfs.namenode.rpc.MkdirRequest\032(.com.he" +
      "po.dfs.namenode.rpc.MkdirResponse\022]\n\006ren" +
      "ame\022(.com.hepo.dfs.namenode.rpc.RenameRe" +
      "quest\032).com.hepo.dfs.namenode.rpc.Rename" +
      "Response\022]\n\006delete\022(.com.hepo.dfs.nameno" +
      "de.rpc.DeleteRequest\032).com.hepo.dfs.name" +
      "node.rpc.DeleteResponse\022c\n\010shutdown\022*.co" +
      "m.hepo.dfs.namenode.rpc.ShutdownRequest\032" +
      "+.com.hepo.dfs.namenode.rpc.ShutdownResp" +
      "onse\022r\n\rfetchEditsLog\022/.com.hepo.dfs.nam" +
      "enode.rpc.FetchEditsLogRequest\0320.com.hep" +
      "o.dfs.namenode.rpc.FetchEditsLogResponse" +
      "\022\207\001\n\024updateCheckpointTxid\0226.com.hepo.dfs" +
      ".namenode.rpc.UpdateCheckpointTxidReques" +
      "t\0327.com.hepo.dfs.namenode.rpc.UpdateChec" +
      "kpointTxidResponse\022e\n\006create\022,.com.hepo." +
      "dfs.namenode.rpc.CreateFileRequest\032-.com" +
      ".hepo.dfs.namenode.rpc.CreateFileRespons" +
      "e\022~\n\021allocateDataNodes\0223.com.hepo.dfs.na" +
      "menode.rpc.AllocateDataNodesRequest\0324.co" +
      "m.hepo.dfs.namenode.rpc.AllocateDataNode" +
      "sResponse\022\212\001\n\025informReplicaReceived\0227.co" +
      "m.hepo.dfs.namenode.rpc.InformReplicaRec" +
      "eivedRequest\0328.com.hepo.dfs.namenode.rpc" +
      ".InformReplicaReceivedResponse\022\226\001\n\031repor" +
      "tCompleteStorageInfo\022;.com.hepo.dfs.name" +
      "node.rpc.ReportCompleteStorageInfoReques" +
      "t\032<.com.hepo.dfs.namenode.rpc.ReportComp" +
      "leteStorageInfoResponse\022\231\001\n\032chooseDataNo" +
      "deFromReplicas\022<.com.hepo.dfs.namenode.r" +
      "pc.ChooseDataNodeFromReplicasRequest\032=.c" +
      "om.hepo.dfs.namenode.rpc.ChooseDataNodeF" +
      "romReplicasResponse\022\201\001\n\022reallocateDataNo" +
      "de\0224.com.hepo.dfs.namenode.rpc.Reallocat" +
      "eDataNodeRequest\0325.com.hepo.dfs.namenode" +
      ".rpc.ReallocateDataNodeResponse\022f\n\trebal" +
      "ance\022+.com.hepo.dfs.namenode.rpc.Rebalan" +
      "ceRequest\032,.com.hepo.dfs.namenode.rpc.Re" +
      "balanceResponseB5\n!com.hepo.dfs.namenode" +
      ".rpc.serviceB\016NameNodeServerP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.hepo.dfs.namenode.rpc.model.NameNodeRpcModel.getDescriptor(),
        });
    com.hepo.dfs.namenode.rpc.model.NameNodeRpcModel.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
